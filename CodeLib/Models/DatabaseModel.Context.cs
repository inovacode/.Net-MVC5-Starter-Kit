//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CodeLib.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AppUser> AppUser { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<Log> Log { get; set; }
        public virtual DbSet<Lookup> Lookup { get; set; }
        public virtual DbSet<LookupType> LookupType { get; set; }
    
        public virtual ObjectResult<Nullable<int>> AppUser_InsertUpdate(Nullable<int> userId, Nullable<int> statusId, Nullable<int> userRoleId, string firstName, string lastName, string email, Nullable<int> changeUserId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var userRoleIdParameter = userRoleId.HasValue ?
                new ObjectParameter("UserRoleId", userRoleId) :
                new ObjectParameter("UserRoleId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var changeUserIdParameter = changeUserId.HasValue ?
                new ObjectParameter("ChangeUserId", changeUserId) :
                new ObjectParameter("ChangeUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AppUser_InsertUpdate", userIdParameter, statusIdParameter, userRoleIdParameter, firstNameParameter, lastNameParameter, emailParameter, changeUserIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AspNetRoles_InsertUpdateDelete(Nullable<int> id, string name, string description, Nullable<bool> delete)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var deleteParameter = delete.HasValue ?
                new ObjectParameter("Delete", delete) :
                new ObjectParameter("Delete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AspNetRoles_InsertUpdateDelete", idParameter, nameParameter, descriptionParameter, deleteParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AspNetUser_Update(Nullable<int> userId, Nullable<bool> emailConfirmed)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var emailConfirmedParameter = emailConfirmed.HasValue ?
                new ObjectParameter("EmailConfirmed", emailConfirmed) :
                new ObjectParameter("EmailConfirmed", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AspNetUser_Update", userIdParameter, emailConfirmedParameter);
        }
    
        public virtual ObjectResult<GetQueryData_Result> GetQueryData(Nullable<int> queryDataTypeId, string filter)
        {
            var queryDataTypeIdParameter = queryDataTypeId.HasValue ?
                new ObjectParameter("QueryDataTypeId", queryDataTypeId) :
                new ObjectParameter("QueryDataTypeId", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQueryData_Result>("GetQueryData", queryDataTypeIdParameter, filterParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Log_Insert(Nullable<int> logTypeId, string descr, string uRL, string page, string linkToId)
        {
            var logTypeIdParameter = logTypeId.HasValue ?
                new ObjectParameter("LogTypeId", logTypeId) :
                new ObjectParameter("LogTypeId", typeof(int));
    
            var descrParameter = descr != null ?
                new ObjectParameter("Descr", descr) :
                new ObjectParameter("Descr", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var pageParameter = page != null ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(string));
    
            var linkToIdParameter = linkToId != null ?
                new ObjectParameter("LinkToId", linkToId) :
                new ObjectParameter("LinkToId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Log_Insert", logTypeIdParameter, descrParameter, uRLParameter, pageParameter, linkToIdParameter);
        }
    }
}
